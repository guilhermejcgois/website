---
import { getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";
import {languages} from `@/i18n/ui`
import { getLangFromUrl, getPosts, useTranslations } from '@/i18n/utils';

import presentation from "@/data/presentation";
import projects from "@/data/projects";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const posts = getPosts(await getCollection("posts"), lang);
export async function getStaticPaths() {
  const langKeys = Object.keys(languages);
  const paths = langKeys.map((lang) => ({ params: { lang }}));

  return paths;
}
---

<Layout>
  <main class="flex flex-col gap-20">
    <article class="flex flex-col gap-8">
      <h1 class="text-3xl text-neutral-100">{presentation.title[lang]}</h1>
      <h2
        class="max-w-[60ch] leading-6"
        set:html={convertAsteriskToStrongTag(presentation.description[lang])}
      />
      <SocialLinks />
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">{t('posts.latest.title')}</h3>
        <Link href=`${lang}/posts` label=`${t('posts.see-all')}` isUnderline target="_self" />
      </header>
      {posts.length === 0 && <p>{t('posts.latest.empty')}</p>}

      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          posts.length !== 0 &&
            posts
              .slice(0, 2)
              .map((post) => (
                <PostCard
                  publishedAt={post.data.publishedAt}
                  title={post.data.title}
                  description={post.data.description}
                  slug={post.slug}
                />
              ))
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">
          {t('projects.featured.title')} ({projects.length})
        </h3>
      </header>
      {projects.length === 0 && <p>{t('projects.featured.empty')}</p>}

      <section class="flex flex-col gap-4">
        {
          projects.length !== 0 &&
            projects.map((project) => <ProjectCard {...project} />)
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">{t('contact.title')}</h3>
      </header>
      <p>
        {t('contact.text1')} <Link
          href={`mailto:${presentation.mail}`}
          label={presentation.mail}
        /> {t('contact.text2')}
      </p>

      <SocialLinks />
    </article>
  </main>
</Layout>
